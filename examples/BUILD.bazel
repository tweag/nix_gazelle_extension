load(
    "@bazel_gazelle//:def.bzl",
    "DEFAULT_LANGUAGES",
    "gazelle_binary",
    "gazelle_generation_test",
)
load(
    "@cgrindel_bazel_starlib//updatesrc:defs.bzl",
    "updatesrc_update",
)

srcs = glob(include = ["**/BUILD.in"])

outs = [file[0:-len(".in")] + ".bazel" for file in srcs]

[
    genrule(
        name = "gen_" + outs[idx],
        srcs = [srcs[idx]],
        outs = [outs[idx]],
        cmd = """\
cat $(location {src}) >> $@
""".format(src = srcs[idx]),
    )
    for idx in range(len(srcs))
]

# For manual execution
# creates BUILD.bazel files out of BUILD.in files
updatesrc_update(
    name = "generate",
    srcs = outs,
    outs = srcs,
)

gazelle_binary(
    name = "gazelle_binary",
    languages = DEFAULT_LANGUAGES + [
        "@io_tweag_gazelle_nix//nix/gazelle",
    ],
)

[
    gazelle_generation_test(
        # Name the test the path to the directory containing the WORKSPACE file.
        name = file[0:-len("/WORKSPACE")],
        gazelle_binary = ":gazelle_binary",
        test_data = glob(
            include = [file[0:-len("/WORKSPACE")] + "/**"],
        ),
    )
    for file in glob(include = ["**/WORKSPACE"])
    if file != "BUILD.bazel"
]
